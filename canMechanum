void CanMechanum(float RX, float RY, float LX, float robotangle){
		RX = -RX;
		float mag = sqrt((RY*RY)+(RX*RX));
		if (gyroenabled) {
			robotangle = (((PI)/180)*robotangle);
			while ((robotangle >= (2*PI)) or (robotangle < 0)){
				if (robotangle >= (2*PI)){
					robotangle = robotangle - (2*PI);
				}

				else if (robotangle < 0){
					robotangle = robotangle + (2*PI);
				}
			}
			float joyangle = 0;
			float dif = 0;
			if ((RX>=0) && (RY>0)) { // Top Right
				joyangle = 0;
					joyangle = atan(RX/RY) + joyangle;
				dif = joyangle - robotangle;
				RY = mag*cos(dif);
				RX = mag*sin(dif);
			}
			else if ((RX>0) && (RY<=0)) { // Bottom Right
				joyangle = ((PI)/2);
					joyangle = (-atan(RY/RX)) + joyangle;
				dif = joyangle - robotangle;
				RX = mag*sin(dif);
				RY = mag*cos(dif);
			}
			else if ((RX<=0) && (RY<0)) { // Bottom Left
				joyangle = (PI);
					joyangle = atan(RX/RY) + joyangle;
				dif = joyangle - robotangle;
				RY = mag*cos(dif);
				RX = mag*sin(dif);
			}
			else if ((RX<0) && (RY>=0)) { // Top Left
				joyangle = ((3*PI)/2);
					joyangle = atan(RY/RX) + joyangle;
				dif = joyangle - robotangle;
				RX = mag*sin(dif);
				RY = -mag*cos(dif);
			}
		}



		mag = sqrt((RY*RY)+(RX*RX));

		float lfVal = RY + LX + RX;
		float lrVal = RY + LX - RX;
		float rfVal = -RY + LX - RX;
		float rrVal = -RY + LX + RX;

		float maxval = lfVal;
		if (lrVal>maxval) {
			maxval = lrVal;
		}
		if (rfVal>maxval) {
			maxval = rfVal;
		}
		if (rrVal>maxval) {
			maxval = rrVal;
		}

		if (ABS(maxval) > 1){
			lfVal = ((lfVal / ABS(maxval))*(mag/sqrt(2)));
			lrVal = ((lrVal / ABS(maxval))*mag/sqrt(2));
			rfVal = ((rfVal / ABS(maxval))*mag/sqrt(2));
			rrVal = ((rrVal / ABS(maxval))*mag/sqrt(2));
		}

		lfm.Set(lfVal);
		lrm.Set(lrVal);
		rfm.Set(rfVal);
		rrm.Set(rrVal);
	}
